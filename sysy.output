Terminals unused in grammar

    FOR


State 139 conflicts: 1 shift/reduce


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: ConstDecl
    2         | ConstDecl CompUnit
    3         | FuncType IDENT RestCompUnit
    4         | FuncType IDENT RestCompUnit CompUnit

    5 RestCompUnit: '(' ')' Block
    6             | '(' FuncFParams ')' Block
    7             | ';'
    8             | ',' VarDef ';'
    9             | '=' ConstInitVal ';'
   10             | '=' ConstInitVal ',' VarDef ';'

   11 FuncType: INT
   12         | VOID

   13 Block: '{' BlockItem '}'
   14      | '{' '}'

   15 Stmt: RETURN Exp ';'
   16     | RETURN ';'
   17     | LVal '=' Exp ';'
   18     | Exp ';'
   19     | ';'
   20     | Block
   21     | IF '(' Exp ')' Stmt
   22     | IF '(' Exp ')' Stmt ELSE Stmt
   23     | WHILE '(' Exp ')' Stmt
   24     | BREAK ';'
   25     | CONTINUE ';'

   26 Exp: LOrExp

   27 PrimaryExp: '(' Exp ')'
   28           | LVal
   29           | Number

   30 UnaryExp: PrimaryExp
   31         | UnaryOp UnaryExp
   32         | IDENT '(' ')'
   33         | IDENT '(' FuncRParams ')'

   34 MulExp: UnaryExp
   35       | MulExp MulOp UnaryExp

   36 AddExp: MulExp
   37       | AddExp AddOp MulExp

   38 RelExp: AddExp
   39       | RelExp RelOp AddExp

   40 EqExp: RelExp
   41      | EqExp EqOp RelExp

   42 LAndExp: EqExp
   43        | LAndExp AND EqExp

   44 LOrExp: LAndExp
   45       | LOrExp OR LAndExp

   46 Decl: ConstDecl
   47     | VarDecl

   48 ConstDecl: CONST BType ConstDef ';'

   49 ConstDef: IDENT '=' ConstInitVal
   50         | IDENT '=' ConstInitVal ',' ConstDef

   51 ConstInitVal: ConstExp

   52 ConstExp: Exp

   53 BlockItem: Decl
   54          | Stmt
   55          | Decl BlockItem
   56          | Stmt BlockItem

   57 LVal: IDENT

   58 VarDecl: BType VarDef ';'

   59 VarDef: IDENT
   60       | IDENT '=' InitVal
   61       | IDENT ',' VarDef
   62       | IDENT '=' InitVal ',' VarDef

   63 InitVal: Exp

   64 FuncFParams: FuncFParam
   65            | FuncFParam ',' FuncFParams

   66 FuncFParam: BType IDENT

   67 FuncRParams: Exp
   68            | Exp ',' FuncRParams

   69 BType: INT

   70 Number: INT_CONST

   71 UnaryOp: PLUS
   72        | MINUS
   73        | NOT

   74 AddOp: PLUS
   75      | MINUS

   76 MulOp: TIMES
   77      | DIVIDE
   78      | MOD

   79 RelOp: LT
   80      | GT
   81      | LE
   82      | GE

   83 EqOp: EQ
   84     | NE


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 5 6 21 22 23 27 32 33
    ')' (41) 5 6 21 22 23 27 32 33
    ',' (44) 8 10 50 61 62 65 68
    ';' (59) 7 8 9 10 15 16 17 18 19 24 25 48 58
    '=' (61) 9 10 17 49 50 60 62
    '{' (123) 13 14
    '}' (125) 13 14
    error (256)
    INT (258) 11 69
    RETURN (259) 15 16
    CONST (260) 48
    IF (261) 21 22
    ELSE (262) 22
    WHILE (263) 23
    FOR (264)
    BREAK (265) 24
    CONTINUE (266) 25
    VOID (267) 12
    INT_CONST <int_val> (268) 70
    PLUS <char_val> (269) 71 74
    MINUS <char_val> (270) 72 75
    NOT <char_val> (271) 73
    TIMES <char_val> (272) 76
    DIVIDE <char_val> (273) 77
    MOD <char_val> (274) 78
    IDENT <str_val> (275) 3 4 32 33 49 50 57 59 60 61 62 66
    LT <str_val> (276) 79
    GT <str_val> (277) 80
    LE <str_val> (278) 81
    GE <str_val> (279) 82
    EQ <str_val> (280) 83
    NE <str_val> (281) 84
    AND <str_val> (282) 43
    OR <str_val> (283) 45


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    CompUnit (37)
        on left: 1 2 3 4
        on right: 0 2 4
    RestCompUnit <ast_val> (38)
        on left: 5 6 7 8 9 10
        on right: 3 4
    FuncType <ast_val> (39)
        on left: 11 12
        on right: 3 4
    Block <ast_val> (40)
        on left: 13 14
        on right: 5 6 20
    Stmt <ast_val> (41)
        on left: 15 16 17 18 19 20 21 22 23 24 25
        on right: 21 22 23 54 56
    Exp <ast_val> (42)
        on left: 26
        on right: 15 17 18 21 22 23 27 52 63 67 68
    PrimaryExp <ast_val> (43)
        on left: 27 28 29
        on right: 30
    UnaryExp <ast_val> (44)
        on left: 30 31 32 33
        on right: 31 34 35
    MulExp <ast_val> (45)
        on left: 34 35
        on right: 35 36 37
    AddExp <ast_val> (46)
        on left: 36 37
        on right: 37 38 39
    RelExp <ast_val> (47)
        on left: 38 39
        on right: 39 40 41
    EqExp <ast_val> (48)
        on left: 40 41
        on right: 41 42 43
    LAndExp <ast_val> (49)
        on left: 42 43
        on right: 43 44 45
    LOrExp <ast_val> (50)
        on left: 44 45
        on right: 26 45
    Decl <ast_val> (51)
        on left: 46 47
        on right: 53 55
    ConstDecl <ast_val> (52)
        on left: 48
        on right: 1 2 46
    ConstDef <ast_val> (53)
        on left: 49 50
        on right: 48 50
    ConstInitVal <ast_val> (54)
        on left: 51
        on right: 9 10 49 50
    ConstExp <ast_val> (55)
        on left: 52
        on right: 51
    BlockItem <ast_val> (56)
        on left: 53 54 55 56
        on right: 13 55 56
    LVal <ast_val> (57)
        on left: 57
        on right: 17 28
    VarDecl <ast_val> (58)
        on left: 58
        on right: 47
    VarDef <ast_val> (59)
        on left: 59 60 61 62
        on right: 8 10 58 61 62
    InitVal <ast_val> (60)
        on left: 63
        on right: 60 62
    FuncFParams <ast_val> (61)
        on left: 64 65
        on right: 6 65
    FuncFParam <ast_val> (62)
        on left: 66
        on right: 64 65
    FuncRParams <ast_val> (63)
        on left: 67 68
        on right: 33 68
    BType <ast_val> (64)
        on left: 69
        on right: 48 58 66
    Number <int_val> (65)
        on left: 70
        on right: 29
    UnaryOp <char_val> (66)
        on left: 71 72 73
        on right: 31
    AddOp <char_val> (67)
        on left: 74 75
        on right: 37
    MulOp <char_val> (68)
        on left: 76 77 78
        on right: 35
    RelOp <str_val> (69)
        on left: 79 80 81 82
        on right: 39
    EqOp <str_val> (70)
        on left: 83 84
        on right: 41


State 0

    0 $accept: . CompUnit $end

    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    CompUnit   go to state 4
    FuncType   go to state 5
    ConstDecl  go to state 6


State 1

   11 FuncType: INT .

    $default  reduce using rule 11 (FuncType)


State 2

   48 ConstDecl: CONST . BType ConstDef ';'

    INT  shift, and go to state 7

    BType  go to state 8


State 3

   12 FuncType: VOID .

    $default  reduce using rule 12 (FuncType)


State 4

    0 $accept: CompUnit . $end

    $end  shift, and go to state 9


State 5

    3 CompUnit: FuncType . IDENT RestCompUnit
    4         | FuncType . IDENT RestCompUnit CompUnit

    IDENT  shift, and go to state 10


State 6

    1 CompUnit: ConstDecl .
    2         | ConstDecl . CompUnit

    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (CompUnit)

    CompUnit   go to state 11
    FuncType   go to state 5
    ConstDecl  go to state 6


State 7

   69 BType: INT .

    $default  reduce using rule 69 (BType)


State 8

   48 ConstDecl: CONST BType . ConstDef ';'

    IDENT  shift, and go to state 12

    ConstDef  go to state 13


State 9

    0 $accept: CompUnit $end .

    $default  accept


State 10

    3 CompUnit: FuncType IDENT . RestCompUnit
    4         | FuncType IDENT . RestCompUnit CompUnit

    '('  shift, and go to state 14
    ';'  shift, and go to state 15
    ','  shift, and go to state 16
    '='  shift, and go to state 17

    RestCompUnit  go to state 18


State 11

    2 CompUnit: ConstDecl CompUnit .

    $default  reduce using rule 2 (CompUnit)


State 12

   49 ConstDef: IDENT . '=' ConstInitVal
   50         | IDENT . '=' ConstInitVal ',' ConstDef

    '='  shift, and go to state 19


State 13

   48 ConstDecl: CONST BType ConstDef . ';'

    ';'  shift, and go to state 20


State 14

    5 RestCompUnit: '(' . ')' Block
    6             | '(' . FuncFParams ')' Block

    INT  shift, and go to state 7
    ')'  shift, and go to state 21

    FuncFParams  go to state 22
    FuncFParam   go to state 23
    BType        go to state 24


State 15

    7 RestCompUnit: ';' .

    $default  reduce using rule 7 (RestCompUnit)


State 16

    8 RestCompUnit: ',' . VarDef ';'

    IDENT  shift, and go to state 25

    VarDef  go to state 26


State 17

    9 RestCompUnit: '=' . ConstInitVal ';'
   10             | '=' . ConstInitVal ',' VarDef ';'

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32

    Exp           go to state 33
    PrimaryExp    go to state 34
    UnaryExp      go to state 35
    MulExp        go to state 36
    AddExp        go to state 37
    RelExp        go to state 38
    EqExp         go to state 39
    LAndExp       go to state 40
    LOrExp        go to state 41
    ConstInitVal  go to state 42
    ConstExp      go to state 43
    LVal          go to state 44
    Number        go to state 45
    UnaryOp       go to state 46


State 18

    3 CompUnit: FuncType IDENT RestCompUnit .
    4         | FuncType IDENT RestCompUnit . CompUnit

    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 3 (CompUnit)

    CompUnit   go to state 47
    FuncType   go to state 5
    ConstDecl  go to state 6


State 19

   49 ConstDef: IDENT '=' . ConstInitVal
   50         | IDENT '=' . ConstInitVal ',' ConstDef

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32

    Exp           go to state 33
    PrimaryExp    go to state 34
    UnaryExp      go to state 35
    MulExp        go to state 36
    AddExp        go to state 37
    RelExp        go to state 38
    EqExp         go to state 39
    LAndExp       go to state 40
    LOrExp        go to state 41
    ConstInitVal  go to state 48
    ConstExp      go to state 43
    LVal          go to state 44
    Number        go to state 45
    UnaryOp       go to state 46


State 20

   48 ConstDecl: CONST BType ConstDef ';' .

    $default  reduce using rule 48 (ConstDecl)


State 21

    5 RestCompUnit: '(' ')' . Block

    '{'  shift, and go to state 49

    Block  go to state 50


State 22

    6 RestCompUnit: '(' FuncFParams . ')' Block

    ')'  shift, and go to state 51


State 23

   64 FuncFParams: FuncFParam .
   65            | FuncFParam . ',' FuncFParams

    ','  shift, and go to state 52

    $default  reduce using rule 64 (FuncFParams)


State 24

   66 FuncFParam: BType . IDENT

    IDENT  shift, and go to state 53


State 25

   59 VarDef: IDENT .
   60       | IDENT . '=' InitVal
   61       | IDENT . ',' VarDef
   62       | IDENT . '=' InitVal ',' VarDef

    ','  shift, and go to state 54
    '='  shift, and go to state 55

    $default  reduce using rule 59 (VarDef)


State 26

    8 RestCompUnit: ',' VarDef . ';'

    ';'  shift, and go to state 56


State 27

   70 Number: INT_CONST .

    $default  reduce using rule 70 (Number)


State 28

   71 UnaryOp: PLUS .

    $default  reduce using rule 71 (UnaryOp)


State 29

   72 UnaryOp: MINUS .

    $default  reduce using rule 72 (UnaryOp)


State 30

   73 UnaryOp: NOT .

    $default  reduce using rule 73 (UnaryOp)


State 31

   32 UnaryExp: IDENT . '(' ')'
   33         | IDENT . '(' FuncRParams ')'
   57 LVal: IDENT .

    '('  shift, and go to state 57

    $default  reduce using rule 57 (LVal)


State 32

   27 PrimaryExp: '(' . Exp ')'

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32

    Exp         go to state 58
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 36
    AddExp      go to state 37
    RelExp      go to state 38
    EqExp       go to state 39
    LAndExp     go to state 40
    LOrExp      go to state 41
    LVal        go to state 44
    Number      go to state 45
    UnaryOp     go to state 46


State 33

   52 ConstExp: Exp .

    $default  reduce using rule 52 (ConstExp)


State 34

   30 UnaryExp: PrimaryExp .

    $default  reduce using rule 30 (UnaryExp)


State 35

   34 MulExp: UnaryExp .

    $default  reduce using rule 34 (MulExp)


State 36

   35 MulExp: MulExp . MulOp UnaryExp
   36 AddExp: MulExp .

    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    MOD     shift, and go to state 61

    $default  reduce using rule 36 (AddExp)

    MulOp  go to state 62


State 37

   37 AddExp: AddExp . AddOp MulExp
   38 RelExp: AddExp .

    PLUS   shift, and go to state 63
    MINUS  shift, and go to state 64

    $default  reduce using rule 38 (RelExp)

    AddOp  go to state 65


State 38

   39 RelExp: RelExp . RelOp AddExp
   40 EqExp: RelExp .

    LT  shift, and go to state 66
    GT  shift, and go to state 67
    LE  shift, and go to state 68
    GE  shift, and go to state 69

    $default  reduce using rule 40 (EqExp)

    RelOp  go to state 70


State 39

   41 EqExp: EqExp . EqOp RelExp
   42 LAndExp: EqExp .

    EQ  shift, and go to state 71
    NE  shift, and go to state 72

    $default  reduce using rule 42 (LAndExp)

    EqOp  go to state 73


State 40

   43 LAndExp: LAndExp . AND EqExp
   44 LOrExp: LAndExp .

    AND  shift, and go to state 74

    $default  reduce using rule 44 (LOrExp)


State 41

   26 Exp: LOrExp .
   45 LOrExp: LOrExp . OR LAndExp

    OR  shift, and go to state 75

    $default  reduce using rule 26 (Exp)


State 42

    9 RestCompUnit: '=' ConstInitVal . ';'
   10             | '=' ConstInitVal . ',' VarDef ';'

    ';'  shift, and go to state 76
    ','  shift, and go to state 77


State 43

   51 ConstInitVal: ConstExp .

    $default  reduce using rule 51 (ConstInitVal)


State 44

   28 PrimaryExp: LVal .

    $default  reduce using rule 28 (PrimaryExp)


State 45

   29 PrimaryExp: Number .

    $default  reduce using rule 29 (PrimaryExp)


State 46

   31 UnaryExp: UnaryOp . UnaryExp

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32

    PrimaryExp  go to state 34
    UnaryExp    go to state 78
    LVal        go to state 44
    Number      go to state 45
    UnaryOp     go to state 46


State 47

    4 CompUnit: FuncType IDENT RestCompUnit CompUnit .

    $default  reduce using rule 4 (CompUnit)


State 48

   49 ConstDef: IDENT '=' ConstInitVal .
   50         | IDENT '=' ConstInitVal . ',' ConstDef

    ','  shift, and go to state 79

    $default  reduce using rule 49 (ConstDef)


State 49

   13 Block: '{' . BlockItem '}'
   14      | '{' . '}'

    INT        shift, and go to state 7
    RETURN     shift, and go to state 80
    CONST      shift, and go to state 2
    IF         shift, and go to state 81
    WHILE      shift, and go to state 82
    BREAK      shift, and go to state 83
    CONTINUE   shift, and go to state 84
    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32
    ';'        shift, and go to state 85
    '{'        shift, and go to state 49
    '}'        shift, and go to state 86

    Block       go to state 87
    Stmt        go to state 88
    Exp         go to state 89
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 36
    AddExp      go to state 37
    RelExp      go to state 38
    EqExp       go to state 39
    LAndExp     go to state 40
    LOrExp      go to state 41
    Decl        go to state 90
    ConstDecl   go to state 91
    BlockItem   go to state 92
    LVal        go to state 93
    VarDecl     go to state 94
    BType       go to state 95
    Number      go to state 45
    UnaryOp     go to state 46


State 50

    5 RestCompUnit: '(' ')' Block .

    $default  reduce using rule 5 (RestCompUnit)


State 51

    6 RestCompUnit: '(' FuncFParams ')' . Block

    '{'  shift, and go to state 49

    Block  go to state 96


State 52

   65 FuncFParams: FuncFParam ',' . FuncFParams

    INT  shift, and go to state 7

    FuncFParams  go to state 97
    FuncFParam   go to state 23
    BType        go to state 24


State 53

   66 FuncFParam: BType IDENT .

    $default  reduce using rule 66 (FuncFParam)


State 54

   61 VarDef: IDENT ',' . VarDef

    IDENT  shift, and go to state 25

    VarDef  go to state 98


State 55

   60 VarDef: IDENT '=' . InitVal
   62       | IDENT '=' . InitVal ',' VarDef

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32

    Exp         go to state 99
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 36
    AddExp      go to state 37
    RelExp      go to state 38
    EqExp       go to state 39
    LAndExp     go to state 40
    LOrExp      go to state 41
    LVal        go to state 44
    InitVal     go to state 100
    Number      go to state 45
    UnaryOp     go to state 46


State 56

    8 RestCompUnit: ',' VarDef ';' .

    $default  reduce using rule 8 (RestCompUnit)


State 57

   32 UnaryExp: IDENT '(' . ')'
   33         | IDENT '(' . FuncRParams ')'

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32
    ')'        shift, and go to state 101

    Exp          go to state 102
    PrimaryExp   go to state 34
    UnaryExp     go to state 35
    MulExp       go to state 36
    AddExp       go to state 37
    RelExp       go to state 38
    EqExp        go to state 39
    LAndExp      go to state 40
    LOrExp       go to state 41
    LVal         go to state 44
    FuncRParams  go to state 103
    Number       go to state 45
    UnaryOp      go to state 46


State 58

   27 PrimaryExp: '(' Exp . ')'

    ')'  shift, and go to state 104


State 59

   76 MulOp: TIMES .

    $default  reduce using rule 76 (MulOp)


State 60

   77 MulOp: DIVIDE .

    $default  reduce using rule 77 (MulOp)


State 61

   78 MulOp: MOD .

    $default  reduce using rule 78 (MulOp)


State 62

   35 MulExp: MulExp MulOp . UnaryExp

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32

    PrimaryExp  go to state 34
    UnaryExp    go to state 105
    LVal        go to state 44
    Number      go to state 45
    UnaryOp     go to state 46


State 63

   74 AddOp: PLUS .

    $default  reduce using rule 74 (AddOp)


State 64

   75 AddOp: MINUS .

    $default  reduce using rule 75 (AddOp)


State 65

   37 AddExp: AddExp AddOp . MulExp

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32

    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 106
    LVal        go to state 44
    Number      go to state 45
    UnaryOp     go to state 46


State 66

   79 RelOp: LT .

    $default  reduce using rule 79 (RelOp)


State 67

   80 RelOp: GT .

    $default  reduce using rule 80 (RelOp)


State 68

   81 RelOp: LE .

    $default  reduce using rule 81 (RelOp)


State 69

   82 RelOp: GE .

    $default  reduce using rule 82 (RelOp)


State 70

   39 RelExp: RelExp RelOp . AddExp

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32

    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 36
    AddExp      go to state 107
    LVal        go to state 44
    Number      go to state 45
    UnaryOp     go to state 46


State 71

   83 EqOp: EQ .

    $default  reduce using rule 83 (EqOp)


State 72

   84 EqOp: NE .

    $default  reduce using rule 84 (EqOp)


State 73

   41 EqExp: EqExp EqOp . RelExp

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32

    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 36
    AddExp      go to state 37
    RelExp      go to state 108
    LVal        go to state 44
    Number      go to state 45
    UnaryOp     go to state 46


State 74

   43 LAndExp: LAndExp AND . EqExp

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32

    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 36
    AddExp      go to state 37
    RelExp      go to state 38
    EqExp       go to state 109
    LVal        go to state 44
    Number      go to state 45
    UnaryOp     go to state 46


State 75

   45 LOrExp: LOrExp OR . LAndExp

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32

    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 36
    AddExp      go to state 37
    RelExp      go to state 38
    EqExp       go to state 39
    LAndExp     go to state 110
    LVal        go to state 44
    Number      go to state 45
    UnaryOp     go to state 46


State 76

    9 RestCompUnit: '=' ConstInitVal ';' .

    $default  reduce using rule 9 (RestCompUnit)


State 77

   10 RestCompUnit: '=' ConstInitVal ',' . VarDef ';'

    IDENT  shift, and go to state 25

    VarDef  go to state 111


State 78

   31 UnaryExp: UnaryOp UnaryExp .

    $default  reduce using rule 31 (UnaryExp)


State 79

   50 ConstDef: IDENT '=' ConstInitVal ',' . ConstDef

    IDENT  shift, and go to state 12

    ConstDef  go to state 112


State 80

   15 Stmt: RETURN . Exp ';'
   16     | RETURN . ';'

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32
    ';'        shift, and go to state 113

    Exp         go to state 114
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 36
    AddExp      go to state 37
    RelExp      go to state 38
    EqExp       go to state 39
    LAndExp     go to state 40
    LOrExp      go to state 41
    LVal        go to state 44
    Number      go to state 45
    UnaryOp     go to state 46


State 81

   21 Stmt: IF . '(' Exp ')' Stmt
   22     | IF . '(' Exp ')' Stmt ELSE Stmt

    '('  shift, and go to state 115


State 82

   23 Stmt: WHILE . '(' Exp ')' Stmt

    '('  shift, and go to state 116


State 83

   24 Stmt: BREAK . ';'

    ';'  shift, and go to state 117


State 84

   25 Stmt: CONTINUE . ';'

    ';'  shift, and go to state 118


State 85

   19 Stmt: ';' .

    $default  reduce using rule 19 (Stmt)


State 86

   14 Block: '{' '}' .

    $default  reduce using rule 14 (Block)


State 87

   20 Stmt: Block .

    $default  reduce using rule 20 (Stmt)


State 88

   54 BlockItem: Stmt .
   56          | Stmt . BlockItem

    INT        shift, and go to state 7
    RETURN     shift, and go to state 80
    CONST      shift, and go to state 2
    IF         shift, and go to state 81
    WHILE      shift, and go to state 82
    BREAK      shift, and go to state 83
    CONTINUE   shift, and go to state 84
    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32
    ';'        shift, and go to state 85
    '{'        shift, and go to state 49

    $default  reduce using rule 54 (BlockItem)

    Block       go to state 87
    Stmt        go to state 88
    Exp         go to state 89
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 36
    AddExp      go to state 37
    RelExp      go to state 38
    EqExp       go to state 39
    LAndExp     go to state 40
    LOrExp      go to state 41
    Decl        go to state 90
    ConstDecl   go to state 91
    BlockItem   go to state 119
    LVal        go to state 93
    VarDecl     go to state 94
    BType       go to state 95
    Number      go to state 45
    UnaryOp     go to state 46


State 89

   18 Stmt: Exp . ';'

    ';'  shift, and go to state 120


State 90

   53 BlockItem: Decl .
   55          | Decl . BlockItem

    INT        shift, and go to state 7
    RETURN     shift, and go to state 80
    CONST      shift, and go to state 2
    IF         shift, and go to state 81
    WHILE      shift, and go to state 82
    BREAK      shift, and go to state 83
    CONTINUE   shift, and go to state 84
    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32
    ';'        shift, and go to state 85
    '{'        shift, and go to state 49

    $default  reduce using rule 53 (BlockItem)

    Block       go to state 87
    Stmt        go to state 88
    Exp         go to state 89
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 36
    AddExp      go to state 37
    RelExp      go to state 38
    EqExp       go to state 39
    LAndExp     go to state 40
    LOrExp      go to state 41
    Decl        go to state 90
    ConstDecl   go to state 91
    BlockItem   go to state 121
    LVal        go to state 93
    VarDecl     go to state 94
    BType       go to state 95
    Number      go to state 45
    UnaryOp     go to state 46


State 91

   46 Decl: ConstDecl .

    $default  reduce using rule 46 (Decl)


State 92

   13 Block: '{' BlockItem . '}'

    '}'  shift, and go to state 122


State 93

   17 Stmt: LVal . '=' Exp ';'
   28 PrimaryExp: LVal .

    '='  shift, and go to state 123

    $default  reduce using rule 28 (PrimaryExp)


State 94

   47 Decl: VarDecl .

    $default  reduce using rule 47 (Decl)


State 95

   58 VarDecl: BType . VarDef ';'

    IDENT  shift, and go to state 25

    VarDef  go to state 124


State 96

    6 RestCompUnit: '(' FuncFParams ')' Block .

    $default  reduce using rule 6 (RestCompUnit)


State 97

   65 FuncFParams: FuncFParam ',' FuncFParams .

    $default  reduce using rule 65 (FuncFParams)


State 98

   61 VarDef: IDENT ',' VarDef .

    $default  reduce using rule 61 (VarDef)


State 99

   63 InitVal: Exp .

    $default  reduce using rule 63 (InitVal)


State 100

   60 VarDef: IDENT '=' InitVal .
   62       | IDENT '=' InitVal . ',' VarDef

    ','  shift, and go to state 125

    $default  reduce using rule 60 (VarDef)


State 101

   32 UnaryExp: IDENT '(' ')' .

    $default  reduce using rule 32 (UnaryExp)


State 102

   67 FuncRParams: Exp .
   68            | Exp . ',' FuncRParams

    ','  shift, and go to state 126

    $default  reduce using rule 67 (FuncRParams)


State 103

   33 UnaryExp: IDENT '(' FuncRParams . ')'

    ')'  shift, and go to state 127


State 104

   27 PrimaryExp: '(' Exp ')' .

    $default  reduce using rule 27 (PrimaryExp)


State 105

   35 MulExp: MulExp MulOp UnaryExp .

    $default  reduce using rule 35 (MulExp)


State 106

   35 MulExp: MulExp . MulOp UnaryExp
   37 AddExp: AddExp AddOp MulExp .

    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    MOD     shift, and go to state 61

    $default  reduce using rule 37 (AddExp)

    MulOp  go to state 62


State 107

   37 AddExp: AddExp . AddOp MulExp
   39 RelExp: RelExp RelOp AddExp .

    PLUS   shift, and go to state 63
    MINUS  shift, and go to state 64

    $default  reduce using rule 39 (RelExp)

    AddOp  go to state 65


State 108

   39 RelExp: RelExp . RelOp AddExp
   41 EqExp: EqExp EqOp RelExp .

    LT  shift, and go to state 66
    GT  shift, and go to state 67
    LE  shift, and go to state 68
    GE  shift, and go to state 69

    $default  reduce using rule 41 (EqExp)

    RelOp  go to state 70


State 109

   41 EqExp: EqExp . EqOp RelExp
   43 LAndExp: LAndExp AND EqExp .

    EQ  shift, and go to state 71
    NE  shift, and go to state 72

    $default  reduce using rule 43 (LAndExp)

    EqOp  go to state 73


State 110

   43 LAndExp: LAndExp . AND EqExp
   45 LOrExp: LOrExp OR LAndExp .

    AND  shift, and go to state 74

    $default  reduce using rule 45 (LOrExp)


State 111

   10 RestCompUnit: '=' ConstInitVal ',' VarDef . ';'

    ';'  shift, and go to state 128


State 112

   50 ConstDef: IDENT '=' ConstInitVal ',' ConstDef .

    $default  reduce using rule 50 (ConstDef)


State 113

   16 Stmt: RETURN ';' .

    $default  reduce using rule 16 (Stmt)


State 114

   15 Stmt: RETURN Exp . ';'

    ';'  shift, and go to state 129


State 115

   21 Stmt: IF '(' . Exp ')' Stmt
   22     | IF '(' . Exp ')' Stmt ELSE Stmt

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32

    Exp         go to state 130
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 36
    AddExp      go to state 37
    RelExp      go to state 38
    EqExp       go to state 39
    LAndExp     go to state 40
    LOrExp      go to state 41
    LVal        go to state 44
    Number      go to state 45
    UnaryOp     go to state 46


State 116

   23 Stmt: WHILE '(' . Exp ')' Stmt

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32

    Exp         go to state 131
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 36
    AddExp      go to state 37
    RelExp      go to state 38
    EqExp       go to state 39
    LAndExp     go to state 40
    LOrExp      go to state 41
    LVal        go to state 44
    Number      go to state 45
    UnaryOp     go to state 46


State 117

   24 Stmt: BREAK ';' .

    $default  reduce using rule 24 (Stmt)


State 118

   25 Stmt: CONTINUE ';' .

    $default  reduce using rule 25 (Stmt)


State 119

   56 BlockItem: Stmt BlockItem .

    $default  reduce using rule 56 (BlockItem)


State 120

   18 Stmt: Exp ';' .

    $default  reduce using rule 18 (Stmt)


State 121

   55 BlockItem: Decl BlockItem .

    $default  reduce using rule 55 (BlockItem)


State 122

   13 Block: '{' BlockItem '}' .

    $default  reduce using rule 13 (Block)


State 123

   17 Stmt: LVal '=' . Exp ';'

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32

    Exp         go to state 132
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 36
    AddExp      go to state 37
    RelExp      go to state 38
    EqExp       go to state 39
    LAndExp     go to state 40
    LOrExp      go to state 41
    LVal        go to state 44
    Number      go to state 45
    UnaryOp     go to state 46


State 124

   58 VarDecl: BType VarDef . ';'

    ';'  shift, and go to state 133


State 125

   62 VarDef: IDENT '=' InitVal ',' . VarDef

    IDENT  shift, and go to state 25

    VarDef  go to state 134


State 126

   68 FuncRParams: Exp ',' . FuncRParams

    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32

    Exp          go to state 102
    PrimaryExp   go to state 34
    UnaryExp     go to state 35
    MulExp       go to state 36
    AddExp       go to state 37
    RelExp       go to state 38
    EqExp        go to state 39
    LAndExp      go to state 40
    LOrExp       go to state 41
    LVal         go to state 44
    FuncRParams  go to state 135
    Number       go to state 45
    UnaryOp      go to state 46


State 127

   33 UnaryExp: IDENT '(' FuncRParams ')' .

    $default  reduce using rule 33 (UnaryExp)


State 128

   10 RestCompUnit: '=' ConstInitVal ',' VarDef ';' .

    $default  reduce using rule 10 (RestCompUnit)


State 129

   15 Stmt: RETURN Exp ';' .

    $default  reduce using rule 15 (Stmt)


State 130

   21 Stmt: IF '(' Exp . ')' Stmt
   22     | IF '(' Exp . ')' Stmt ELSE Stmt

    ')'  shift, and go to state 136


State 131

   23 Stmt: WHILE '(' Exp . ')' Stmt

    ')'  shift, and go to state 137


State 132

   17 Stmt: LVal '=' Exp . ';'

    ';'  shift, and go to state 138


State 133

   58 VarDecl: BType VarDef ';' .

    $default  reduce using rule 58 (VarDecl)


State 134

   62 VarDef: IDENT '=' InitVal ',' VarDef .

    $default  reduce using rule 62 (VarDef)


State 135

   68 FuncRParams: Exp ',' FuncRParams .

    $default  reduce using rule 68 (FuncRParams)


State 136

   21 Stmt: IF '(' Exp ')' . Stmt
   22     | IF '(' Exp ')' . Stmt ELSE Stmt

    RETURN     shift, and go to state 80
    IF         shift, and go to state 81
    WHILE      shift, and go to state 82
    BREAK      shift, and go to state 83
    CONTINUE   shift, and go to state 84
    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32
    ';'        shift, and go to state 85
    '{'        shift, and go to state 49

    Block       go to state 87
    Stmt        go to state 139
    Exp         go to state 89
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 36
    AddExp      go to state 37
    RelExp      go to state 38
    EqExp       go to state 39
    LAndExp     go to state 40
    LOrExp      go to state 41
    LVal        go to state 93
    Number      go to state 45
    UnaryOp     go to state 46


State 137

   23 Stmt: WHILE '(' Exp ')' . Stmt

    RETURN     shift, and go to state 80
    IF         shift, and go to state 81
    WHILE      shift, and go to state 82
    BREAK      shift, and go to state 83
    CONTINUE   shift, and go to state 84
    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32
    ';'        shift, and go to state 85
    '{'        shift, and go to state 49

    Block       go to state 87
    Stmt        go to state 140
    Exp         go to state 89
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 36
    AddExp      go to state 37
    RelExp      go to state 38
    EqExp       go to state 39
    LAndExp     go to state 40
    LOrExp      go to state 41
    LVal        go to state 93
    Number      go to state 45
    UnaryOp     go to state 46


State 138

   17 Stmt: LVal '=' Exp ';' .

    $default  reduce using rule 17 (Stmt)


State 139

   21 Stmt: IF '(' Exp ')' Stmt .
   22     | IF '(' Exp ')' Stmt . ELSE Stmt

    ELSE  shift, and go to state 141

    ELSE      [reduce using rule 21 (Stmt)]
    $default  reduce using rule 21 (Stmt)


State 140

   23 Stmt: WHILE '(' Exp ')' Stmt .

    $default  reduce using rule 23 (Stmt)


State 141

   22 Stmt: IF '(' Exp ')' Stmt ELSE . Stmt

    RETURN     shift, and go to state 80
    IF         shift, and go to state 81
    WHILE      shift, and go to state 82
    BREAK      shift, and go to state 83
    CONTINUE   shift, and go to state 84
    INT_CONST  shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    NOT        shift, and go to state 30
    IDENT      shift, and go to state 31
    '('        shift, and go to state 32
    ';'        shift, and go to state 85
    '{'        shift, and go to state 49

    Block       go to state 87
    Stmt        go to state 142
    Exp         go to state 89
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    MulExp      go to state 36
    AddExp      go to state 37
    RelExp      go to state 38
    EqExp       go to state 39
    LAndExp     go to state 40
    LOrExp      go to state 41
    LVal        go to state 93
    Number      go to state 45
    UnaryOp     go to state 46


State 142

   22 Stmt: IF '(' Exp ')' Stmt ELSE Stmt .

    $default  reduce using rule 22 (Stmt)
