Terminals unused in grammar

    FOR


State 183 conflicts: 1 shift/reduce


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: ConstDecl
    2         | ConstDecl CompUnit
    3         | FuncType IDENT RestCompUnit
    4         | FuncType IDENT RestCompUnit CompUnit

    5 RestCompUnit: '(' ')' Block
    6             | '(' FuncFParams ')' Block
    7             | ';'
    8             | ',' VarDef ';'
    9             | '=' InitVal ';'
   10             | '=' InitVal ',' VarDef ';'
   11             | ConstArray ';'
   12             | ConstArray ',' VarDef ';'
   13             | ConstArray '=' InitVal ';'
   14             | ConstArray '=' InitVal ',' VarDef ';'

   15 FuncType: INT
   16         | VOID

   17 Block: '{' BlockItem '}'
   18      | '{' '}'

   19 Stmt: RETURN Exp ';'
   20     | RETURN ';'
   21     | LVal '=' Exp ';'
   22     | Exp ';'
   23     | ';'
   24     | Block
   25     | IF '(' Exp ')' Stmt
   26     | IF '(' Exp ')' Stmt ELSE Stmt
   27     | WHILE '(' Exp ')' Stmt
   28     | BREAK ';'
   29     | CONTINUE ';'

   30 Exp: LOrExp

   31 PrimaryExp: '(' Exp ')'
   32           | LVal
   33           | Number

   34 UnaryExp: PrimaryExp
   35         | UnaryOp UnaryExp
   36         | IDENT '(' ')'
   37         | IDENT '(' FuncRParams ')'

   38 MulExp: UnaryExp
   39       | MulExp MulOp UnaryExp

   40 AddExp: MulExp
   41       | AddExp AddOp MulExp

   42 RelExp: AddExp
   43       | RelExp RelOp AddExp

   44 EqExp: RelExp
   45      | EqExp EqOp RelExp

   46 LAndExp: EqExp
   47        | LAndExp AND EqExp

   48 LOrExp: LAndExp
   49       | LOrExp OR LAndExp

   50 Decl: ConstDecl
   51     | VarDecl

   52 ConstDecl: CONST BType ConstDef ';'

   53 ConstDef: IDENT '=' ConstInitVal
   54         | IDENT '=' ConstInitVal ',' ConstDef
   55         | IDENT ConstArray '=' ConstInitVal
   56         | IDENT ConstArray '=' ConstInitVal ',' ConstDef

   57 ConstInitVal: ConstExp
   58             | '{' ConstInitVals '}'

   59 ConstInitVals: ConstInitVal
   60              | ConstInitVal ',' ConstInitVals

   61 ConstExp: Exp

   62 BlockItem: Decl
   63          | Stmt
   64          | Decl BlockItem
   65          | Stmt BlockItem

   66 LVal: IDENT
   67     | IDENT Array

   68 VarDecl: BType VarDef ';'

   69 VarDef: IDENT
   70       | IDENT '=' InitVal
   71       | IDENT ',' VarDef
   72       | IDENT '=' InitVal ',' VarDef
   73       | IDENT ConstArray
   74       | IDENT ConstArray '=' InitVal
   75       | IDENT ConstArray ',' VarDef
   76       | IDENT ConstArray '=' InitVal ',' VarDef

   77 InitVal: Exp
   78        | '{' InitVals '}'

   79 InitVals: InitVal
   80         | InitVal ',' InitVals

   81 FuncFParams: FuncFParam
   82            | FuncFParam ',' FuncFParams

   83 FuncFParam: BType IDENT

   84 FuncRParams: Exp
   85            | Exp ',' FuncRParams

   86 ConstArray: '[' ConstExp ']'
   87           | '[' ConstExp ']' ConstArray

   88 Array: '[' Exp ']'
   89      | '[' Exp ']' Array

   90 BType: INT

   91 Number: INT_CONST

   92 UnaryOp: PLUS
   93        | MINUS
   94        | NOT

   95 AddOp: PLUS
   96      | MINUS

   97 MulOp: TIMES
   98      | DIVIDE
   99      | MOD

  100 RelOp: LT
  101      | GT
  102      | LE
  103      | GE

  104 EqOp: EQ
  105     | NE


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 5 6 25 26 27 31 36 37
    ')' (41) 5 6 25 26 27 31 36 37
    ',' (44) 8 10 12 14 54 56 60 71 72 75 76 80 82 85
    ';' (59) 7 8 9 10 11 12 13 14 19 20 21 22 23 28 29 52 68
    '=' (61) 9 10 13 14 21 53 54 55 56 70 72 74 76
    '[' (91) 86 87 88 89
    ']' (93) 86 87 88 89
    '{' (123) 17 18 58 78
    '}' (125) 17 18 58 78
    error (256)
    INT (258) 15 90
    RETURN (259) 19 20
    CONST (260) 52
    IF (261) 25 26
    ELSE (262) 26
    WHILE (263) 27
    FOR (264)
    BREAK (265) 28
    CONTINUE (266) 29
    VOID (267) 16
    INT_CONST <int_val> (268) 91
    PLUS <char_val> (269) 92 95
    MINUS <char_val> (270) 93 96
    NOT <char_val> (271) 94
    TIMES <char_val> (272) 97
    DIVIDE <char_val> (273) 98
    MOD <char_val> (274) 99
    IDENT <str_val> (275) 3 4 36 37 53 54 55 56 66 67 69 70 71 72 73 74 75 76 83
    LT <str_val> (276) 100
    GT <str_val> (277) 101
    LE <str_val> (278) 102
    GE <str_val> (279) 103
    EQ <str_val> (280) 104
    NE <str_val> (281) 105
    AND <str_val> (282) 47
    OR <str_val> (283) 49


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    CompUnit (39)
        on left: 1 2 3 4
        on right: 0 2 4
    RestCompUnit <ast_val> (40)
        on left: 5 6 7 8 9 10 11 12 13 14
        on right: 3 4
    FuncType <ast_val> (41)
        on left: 15 16
        on right: 3 4
    Block <ast_val> (42)
        on left: 17 18
        on right: 5 6 24
    Stmt <ast_val> (43)
        on left: 19 20 21 22 23 24 25 26 27 28 29
        on right: 25 26 27 63 65
    Exp <ast_val> (44)
        on left: 30
        on right: 19 21 22 25 26 27 31 61 77 84 85 88 89
    PrimaryExp <ast_val> (45)
        on left: 31 32 33
        on right: 34
    UnaryExp <ast_val> (46)
        on left: 34 35 36 37
        on right: 35 38 39
    MulExp <ast_val> (47)
        on left: 38 39
        on right: 39 40 41
    AddExp <ast_val> (48)
        on left: 40 41
        on right: 41 42 43
    RelExp <ast_val> (49)
        on left: 42 43
        on right: 43 44 45
    EqExp <ast_val> (50)
        on left: 44 45
        on right: 45 46 47
    LAndExp <ast_val> (51)
        on left: 46 47
        on right: 47 48 49
    LOrExp <ast_val> (52)
        on left: 48 49
        on right: 30 49
    Decl <ast_val> (53)
        on left: 50 51
        on right: 62 64
    ConstDecl <ast_val> (54)
        on left: 52
        on right: 1 2 50
    ConstDef <ast_val> (55)
        on left: 53 54 55 56
        on right: 52 54 56
    ConstInitVal <ast_val> (56)
        on left: 57 58
        on right: 53 54 55 56 59 60
    ConstInitVals <ast_val> (57)
        on left: 59 60
        on right: 58 60
    ConstExp <ast_val> (58)
        on left: 61
        on right: 57 86 87
    BlockItem <ast_val> (59)
        on left: 62 63 64 65
        on right: 17 64 65
    LVal <ast_val> (60)
        on left: 66 67
        on right: 21 32
    VarDecl <ast_val> (61)
        on left: 68
        on right: 51
    VarDef <ast_val> (62)
        on left: 69 70 71 72 73 74 75 76
        on right: 8 10 12 14 68 71 72 75 76
    InitVal <ast_val> (63)
        on left: 77 78
        on right: 9 10 13 14 70 72 74 76 79 80
    InitVals <ast_val> (64)
        on left: 79 80
        on right: 78 80
    FuncFParams <ast_val> (65)
        on left: 81 82
        on right: 6 82
    FuncFParam <ast_val> (66)
        on left: 83
        on right: 81 82
    FuncRParams <ast_val> (67)
        on left: 84 85
        on right: 37 85
    ConstArray <ast_val> (68)
        on left: 86 87
        on right: 11 12 13 14 55 56 73 74 75 76 87
    Array <ast_val> (69)
        on left: 88 89
        on right: 67 89
    BType <ast_val> (70)
        on left: 90
        on right: 52 68 83
    Number <int_val> (71)
        on left: 91
        on right: 33
    UnaryOp <char_val> (72)
        on left: 92 93 94
        on right: 35
    AddOp <char_val> (73)
        on left: 95 96
        on right: 41
    MulOp <char_val> (74)
        on left: 97 98 99
        on right: 39
    RelOp <str_val> (75)
        on left: 100 101 102 103
        on right: 43
    EqOp <str_val> (76)
        on left: 104 105
        on right: 45


State 0

    0 $accept: . CompUnit $end

    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    CompUnit   go to state 4
    FuncType   go to state 5
    ConstDecl  go to state 6


State 1

   15 FuncType: INT .

    $default  reduce using rule 15 (FuncType)


State 2

   52 ConstDecl: CONST . BType ConstDef ';'

    INT  shift, and go to state 7

    BType  go to state 8


State 3

   16 FuncType: VOID .

    $default  reduce using rule 16 (FuncType)


State 4

    0 $accept: CompUnit . $end

    $end  shift, and go to state 9


State 5

    3 CompUnit: FuncType . IDENT RestCompUnit
    4         | FuncType . IDENT RestCompUnit CompUnit

    IDENT  shift, and go to state 10


State 6

    1 CompUnit: ConstDecl .
    2         | ConstDecl . CompUnit

    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (CompUnit)

    CompUnit   go to state 11
    FuncType   go to state 5
    ConstDecl  go to state 6


State 7

   90 BType: INT .

    $default  reduce using rule 90 (BType)


State 8

   52 ConstDecl: CONST BType . ConstDef ';'

    IDENT  shift, and go to state 12

    ConstDef  go to state 13


State 9

    0 $accept: CompUnit $end .

    $default  accept


State 10

    3 CompUnit: FuncType IDENT . RestCompUnit
    4         | FuncType IDENT . RestCompUnit CompUnit

    '('  shift, and go to state 14
    ';'  shift, and go to state 15
    ','  shift, and go to state 16
    '='  shift, and go to state 17
    '['  shift, and go to state 18

    RestCompUnit  go to state 19
    ConstArray    go to state 20


State 11

    2 CompUnit: ConstDecl CompUnit .

    $default  reduce using rule 2 (CompUnit)


State 12

   53 ConstDef: IDENT . '=' ConstInitVal
   54         | IDENT . '=' ConstInitVal ',' ConstDef
   55         | IDENT . ConstArray '=' ConstInitVal
   56         | IDENT . ConstArray '=' ConstInitVal ',' ConstDef

    '='  shift, and go to state 21
    '['  shift, and go to state 18

    ConstArray  go to state 22


State 13

   52 ConstDecl: CONST BType ConstDef . ';'

    ';'  shift, and go to state 23


State 14

    5 RestCompUnit: '(' . ')' Block
    6             | '(' . FuncFParams ')' Block

    INT  shift, and go to state 7
    ')'  shift, and go to state 24

    FuncFParams  go to state 25
    FuncFParam   go to state 26
    BType        go to state 27


State 15

    7 RestCompUnit: ';' .

    $default  reduce using rule 7 (RestCompUnit)


State 16

    8 RestCompUnit: ',' . VarDef ';'

    IDENT  shift, and go to state 28

    VarDef  go to state 29


State 17

    9 RestCompUnit: '=' . InitVal ';'
   10             | '=' . InitVal ',' VarDef ';'

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    '{'        shift, and go to state 36

    Exp         go to state 37
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    LVal        go to state 46
    InitVal     go to state 47
    Number      go to state 48
    UnaryOp     go to state 49


State 18

   86 ConstArray: '[' . ConstExp ']'
   87           | '[' . ConstExp ']' ConstArray

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35

    Exp         go to state 50
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    ConstExp    go to state 51
    LVal        go to state 46
    Number      go to state 48
    UnaryOp     go to state 49


State 19

    3 CompUnit: FuncType IDENT RestCompUnit .
    4         | FuncType IDENT RestCompUnit . CompUnit

    INT    shift, and go to state 1
    CONST  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 3 (CompUnit)

    CompUnit   go to state 52
    FuncType   go to state 5
    ConstDecl  go to state 6


State 20

   11 RestCompUnit: ConstArray . ';'
   12             | ConstArray . ',' VarDef ';'
   13             | ConstArray . '=' InitVal ';'
   14             | ConstArray . '=' InitVal ',' VarDef ';'

    ';'  shift, and go to state 53
    ','  shift, and go to state 54
    '='  shift, and go to state 55


State 21

   53 ConstDef: IDENT '=' . ConstInitVal
   54         | IDENT '=' . ConstInitVal ',' ConstDef

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    '{'        shift, and go to state 56

    Exp           go to state 50
    PrimaryExp    go to state 38
    UnaryExp      go to state 39
    MulExp        go to state 40
    AddExp        go to state 41
    RelExp        go to state 42
    EqExp         go to state 43
    LAndExp       go to state 44
    LOrExp        go to state 45
    ConstInitVal  go to state 57
    ConstExp      go to state 58
    LVal          go to state 46
    Number        go to state 48
    UnaryOp       go to state 49


State 22

   55 ConstDef: IDENT ConstArray . '=' ConstInitVal
   56         | IDENT ConstArray . '=' ConstInitVal ',' ConstDef

    '='  shift, and go to state 59


State 23

   52 ConstDecl: CONST BType ConstDef ';' .

    $default  reduce using rule 52 (ConstDecl)


State 24

    5 RestCompUnit: '(' ')' . Block

    '{'  shift, and go to state 60

    Block  go to state 61


State 25

    6 RestCompUnit: '(' FuncFParams . ')' Block

    ')'  shift, and go to state 62


State 26

   81 FuncFParams: FuncFParam .
   82            | FuncFParam . ',' FuncFParams

    ','  shift, and go to state 63

    $default  reduce using rule 81 (FuncFParams)


State 27

   83 FuncFParam: BType . IDENT

    IDENT  shift, and go to state 64


State 28

   69 VarDef: IDENT .
   70       | IDENT . '=' InitVal
   71       | IDENT . ',' VarDef
   72       | IDENT . '=' InitVal ',' VarDef
   73       | IDENT . ConstArray
   74       | IDENT . ConstArray '=' InitVal
   75       | IDENT . ConstArray ',' VarDef
   76       | IDENT . ConstArray '=' InitVal ',' VarDef

    ','  shift, and go to state 65
    '='  shift, and go to state 66
    '['  shift, and go to state 18

    $default  reduce using rule 69 (VarDef)

    ConstArray  go to state 67


State 29

    8 RestCompUnit: ',' VarDef . ';'

    ';'  shift, and go to state 68


State 30

   91 Number: INT_CONST .

    $default  reduce using rule 91 (Number)


State 31

   92 UnaryOp: PLUS .

    $default  reduce using rule 92 (UnaryOp)


State 32

   93 UnaryOp: MINUS .

    $default  reduce using rule 93 (UnaryOp)


State 33

   94 UnaryOp: NOT .

    $default  reduce using rule 94 (UnaryOp)


State 34

   36 UnaryExp: IDENT . '(' ')'
   37         | IDENT . '(' FuncRParams ')'
   66 LVal: IDENT .
   67     | IDENT . Array

    '('  shift, and go to state 69
    '['  shift, and go to state 70

    $default  reduce using rule 66 (LVal)

    Array  go to state 71


State 35

   31 PrimaryExp: '(' . Exp ')'

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35

    Exp         go to state 72
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    LVal        go to state 46
    Number      go to state 48
    UnaryOp     go to state 49


State 36

   78 InitVal: '{' . InitVals '}'

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    '{'        shift, and go to state 36

    Exp         go to state 37
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    LVal        go to state 46
    InitVal     go to state 73
    InitVals    go to state 74
    Number      go to state 48
    UnaryOp     go to state 49


State 37

   77 InitVal: Exp .

    $default  reduce using rule 77 (InitVal)


State 38

   34 UnaryExp: PrimaryExp .

    $default  reduce using rule 34 (UnaryExp)


State 39

   38 MulExp: UnaryExp .

    $default  reduce using rule 38 (MulExp)


State 40

   39 MulExp: MulExp . MulOp UnaryExp
   40 AddExp: MulExp .

    TIMES   shift, and go to state 75
    DIVIDE  shift, and go to state 76
    MOD     shift, and go to state 77

    $default  reduce using rule 40 (AddExp)

    MulOp  go to state 78


State 41

   41 AddExp: AddExp . AddOp MulExp
   42 RelExp: AddExp .

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80

    $default  reduce using rule 42 (RelExp)

    AddOp  go to state 81


State 42

   43 RelExp: RelExp . RelOp AddExp
   44 EqExp: RelExp .

    LT  shift, and go to state 82
    GT  shift, and go to state 83
    LE  shift, and go to state 84
    GE  shift, and go to state 85

    $default  reduce using rule 44 (EqExp)

    RelOp  go to state 86


State 43

   45 EqExp: EqExp . EqOp RelExp
   46 LAndExp: EqExp .

    EQ  shift, and go to state 87
    NE  shift, and go to state 88

    $default  reduce using rule 46 (LAndExp)

    EqOp  go to state 89


State 44

   47 LAndExp: LAndExp . AND EqExp
   48 LOrExp: LAndExp .

    AND  shift, and go to state 90

    $default  reduce using rule 48 (LOrExp)


State 45

   30 Exp: LOrExp .
   49 LOrExp: LOrExp . OR LAndExp

    OR  shift, and go to state 91

    $default  reduce using rule 30 (Exp)


State 46

   32 PrimaryExp: LVal .

    $default  reduce using rule 32 (PrimaryExp)


State 47

    9 RestCompUnit: '=' InitVal . ';'
   10             | '=' InitVal . ',' VarDef ';'

    ';'  shift, and go to state 92
    ','  shift, and go to state 93


State 48

   33 PrimaryExp: Number .

    $default  reduce using rule 33 (PrimaryExp)


State 49

   35 UnaryExp: UnaryOp . UnaryExp

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35

    PrimaryExp  go to state 38
    UnaryExp    go to state 94
    LVal        go to state 46
    Number      go to state 48
    UnaryOp     go to state 49


State 50

   61 ConstExp: Exp .

    $default  reduce using rule 61 (ConstExp)


State 51

   86 ConstArray: '[' ConstExp . ']'
   87           | '[' ConstExp . ']' ConstArray

    ']'  shift, and go to state 95


State 52

    4 CompUnit: FuncType IDENT RestCompUnit CompUnit .

    $default  reduce using rule 4 (CompUnit)


State 53

   11 RestCompUnit: ConstArray ';' .

    $default  reduce using rule 11 (RestCompUnit)


State 54

   12 RestCompUnit: ConstArray ',' . VarDef ';'

    IDENT  shift, and go to state 28

    VarDef  go to state 96


State 55

   13 RestCompUnit: ConstArray '=' . InitVal ';'
   14             | ConstArray '=' . InitVal ',' VarDef ';'

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    '{'        shift, and go to state 36

    Exp         go to state 37
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    LVal        go to state 46
    InitVal     go to state 97
    Number      go to state 48
    UnaryOp     go to state 49


State 56

   58 ConstInitVal: '{' . ConstInitVals '}'

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    '{'        shift, and go to state 56

    Exp            go to state 50
    PrimaryExp     go to state 38
    UnaryExp       go to state 39
    MulExp         go to state 40
    AddExp         go to state 41
    RelExp         go to state 42
    EqExp          go to state 43
    LAndExp        go to state 44
    LOrExp         go to state 45
    ConstInitVal   go to state 98
    ConstInitVals  go to state 99
    ConstExp       go to state 58
    LVal           go to state 46
    Number         go to state 48
    UnaryOp        go to state 49


State 57

   53 ConstDef: IDENT '=' ConstInitVal .
   54         | IDENT '=' ConstInitVal . ',' ConstDef

    ','  shift, and go to state 100

    $default  reduce using rule 53 (ConstDef)


State 58

   57 ConstInitVal: ConstExp .

    $default  reduce using rule 57 (ConstInitVal)


State 59

   55 ConstDef: IDENT ConstArray '=' . ConstInitVal
   56         | IDENT ConstArray '=' . ConstInitVal ',' ConstDef

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    '{'        shift, and go to state 56

    Exp           go to state 50
    PrimaryExp    go to state 38
    UnaryExp      go to state 39
    MulExp        go to state 40
    AddExp        go to state 41
    RelExp        go to state 42
    EqExp         go to state 43
    LAndExp       go to state 44
    LOrExp        go to state 45
    ConstInitVal  go to state 101
    ConstExp      go to state 58
    LVal          go to state 46
    Number        go to state 48
    UnaryOp       go to state 49


State 60

   17 Block: '{' . BlockItem '}'
   18      | '{' . '}'

    INT        shift, and go to state 7
    RETURN     shift, and go to state 102
    CONST      shift, and go to state 2
    IF         shift, and go to state 103
    WHILE      shift, and go to state 104
    BREAK      shift, and go to state 105
    CONTINUE   shift, and go to state 106
    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    ';'        shift, and go to state 107
    '{'        shift, and go to state 60
    '}'        shift, and go to state 108

    Block       go to state 109
    Stmt        go to state 110
    Exp         go to state 111
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    Decl        go to state 112
    ConstDecl   go to state 113
    BlockItem   go to state 114
    LVal        go to state 115
    VarDecl     go to state 116
    BType       go to state 117
    Number      go to state 48
    UnaryOp     go to state 49


State 61

    5 RestCompUnit: '(' ')' Block .

    $default  reduce using rule 5 (RestCompUnit)


State 62

    6 RestCompUnit: '(' FuncFParams ')' . Block

    '{'  shift, and go to state 60

    Block  go to state 118


State 63

   82 FuncFParams: FuncFParam ',' . FuncFParams

    INT  shift, and go to state 7

    FuncFParams  go to state 119
    FuncFParam   go to state 26
    BType        go to state 27


State 64

   83 FuncFParam: BType IDENT .

    $default  reduce using rule 83 (FuncFParam)


State 65

   71 VarDef: IDENT ',' . VarDef

    IDENT  shift, and go to state 28

    VarDef  go to state 120


State 66

   70 VarDef: IDENT '=' . InitVal
   72       | IDENT '=' . InitVal ',' VarDef

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    '{'        shift, and go to state 36

    Exp         go to state 37
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    LVal        go to state 46
    InitVal     go to state 121
    Number      go to state 48
    UnaryOp     go to state 49


State 67

   73 VarDef: IDENT ConstArray .
   74       | IDENT ConstArray . '=' InitVal
   75       | IDENT ConstArray . ',' VarDef
   76       | IDENT ConstArray . '=' InitVal ',' VarDef

    ','  shift, and go to state 122
    '='  shift, and go to state 123

    $default  reduce using rule 73 (VarDef)


State 68

    8 RestCompUnit: ',' VarDef ';' .

    $default  reduce using rule 8 (RestCompUnit)


State 69

   36 UnaryExp: IDENT '(' . ')'
   37         | IDENT '(' . FuncRParams ')'

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    ')'        shift, and go to state 124

    Exp          go to state 125
    PrimaryExp   go to state 38
    UnaryExp     go to state 39
    MulExp       go to state 40
    AddExp       go to state 41
    RelExp       go to state 42
    EqExp        go to state 43
    LAndExp      go to state 44
    LOrExp       go to state 45
    LVal         go to state 46
    FuncRParams  go to state 126
    Number       go to state 48
    UnaryOp      go to state 49


State 70

   88 Array: '[' . Exp ']'
   89      | '[' . Exp ']' Array

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35

    Exp         go to state 127
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    LVal        go to state 46
    Number      go to state 48
    UnaryOp     go to state 49


State 71

   67 LVal: IDENT Array .

    $default  reduce using rule 67 (LVal)


State 72

   31 PrimaryExp: '(' Exp . ')'

    ')'  shift, and go to state 128


State 73

   79 InitVals: InitVal .
   80         | InitVal . ',' InitVals

    ','  shift, and go to state 129

    $default  reduce using rule 79 (InitVals)


State 74

   78 InitVal: '{' InitVals . '}'

    '}'  shift, and go to state 130


State 75

   97 MulOp: TIMES .

    $default  reduce using rule 97 (MulOp)


State 76

   98 MulOp: DIVIDE .

    $default  reduce using rule 98 (MulOp)


State 77

   99 MulOp: MOD .

    $default  reduce using rule 99 (MulOp)


State 78

   39 MulExp: MulExp MulOp . UnaryExp

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35

    PrimaryExp  go to state 38
    UnaryExp    go to state 131
    LVal        go to state 46
    Number      go to state 48
    UnaryOp     go to state 49


State 79

   95 AddOp: PLUS .

    $default  reduce using rule 95 (AddOp)


State 80

   96 AddOp: MINUS .

    $default  reduce using rule 96 (AddOp)


State 81

   41 AddExp: AddExp AddOp . MulExp

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35

    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 132
    LVal        go to state 46
    Number      go to state 48
    UnaryOp     go to state 49


State 82

  100 RelOp: LT .

    $default  reduce using rule 100 (RelOp)


State 83

  101 RelOp: GT .

    $default  reduce using rule 101 (RelOp)


State 84

  102 RelOp: LE .

    $default  reduce using rule 102 (RelOp)


State 85

  103 RelOp: GE .

    $default  reduce using rule 103 (RelOp)


State 86

   43 RelExp: RelExp RelOp . AddExp

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35

    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 133
    LVal        go to state 46
    Number      go to state 48
    UnaryOp     go to state 49


State 87

  104 EqOp: EQ .

    $default  reduce using rule 104 (EqOp)


State 88

  105 EqOp: NE .

    $default  reduce using rule 105 (EqOp)


State 89

   45 EqExp: EqExp EqOp . RelExp

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35

    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 134
    LVal        go to state 46
    Number      go to state 48
    UnaryOp     go to state 49


State 90

   47 LAndExp: LAndExp AND . EqExp

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35

    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 135
    LVal        go to state 46
    Number      go to state 48
    UnaryOp     go to state 49


State 91

   49 LOrExp: LOrExp OR . LAndExp

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35

    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 136
    LVal        go to state 46
    Number      go to state 48
    UnaryOp     go to state 49


State 92

    9 RestCompUnit: '=' InitVal ';' .

    $default  reduce using rule 9 (RestCompUnit)


State 93

   10 RestCompUnit: '=' InitVal ',' . VarDef ';'

    IDENT  shift, and go to state 28

    VarDef  go to state 137


State 94

   35 UnaryExp: UnaryOp UnaryExp .

    $default  reduce using rule 35 (UnaryExp)


State 95

   86 ConstArray: '[' ConstExp ']' .
   87           | '[' ConstExp ']' . ConstArray

    '['  shift, and go to state 18

    $default  reduce using rule 86 (ConstArray)

    ConstArray  go to state 138


State 96

   12 RestCompUnit: ConstArray ',' VarDef . ';'

    ';'  shift, and go to state 139


State 97

   13 RestCompUnit: ConstArray '=' InitVal . ';'
   14             | ConstArray '=' InitVal . ',' VarDef ';'

    ';'  shift, and go to state 140
    ','  shift, and go to state 141


State 98

   59 ConstInitVals: ConstInitVal .
   60              | ConstInitVal . ',' ConstInitVals

    ','  shift, and go to state 142

    $default  reduce using rule 59 (ConstInitVals)


State 99

   58 ConstInitVal: '{' ConstInitVals . '}'

    '}'  shift, and go to state 143


State 100

   54 ConstDef: IDENT '=' ConstInitVal ',' . ConstDef

    IDENT  shift, and go to state 12

    ConstDef  go to state 144


State 101

   55 ConstDef: IDENT ConstArray '=' ConstInitVal .
   56         | IDENT ConstArray '=' ConstInitVal . ',' ConstDef

    ','  shift, and go to state 145

    $default  reduce using rule 55 (ConstDef)


State 102

   19 Stmt: RETURN . Exp ';'
   20     | RETURN . ';'

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    ';'        shift, and go to state 146

    Exp         go to state 147
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    LVal        go to state 46
    Number      go to state 48
    UnaryOp     go to state 49


State 103

   25 Stmt: IF . '(' Exp ')' Stmt
   26     | IF . '(' Exp ')' Stmt ELSE Stmt

    '('  shift, and go to state 148


State 104

   27 Stmt: WHILE . '(' Exp ')' Stmt

    '('  shift, and go to state 149


State 105

   28 Stmt: BREAK . ';'

    ';'  shift, and go to state 150


State 106

   29 Stmt: CONTINUE . ';'

    ';'  shift, and go to state 151


State 107

   23 Stmt: ';' .

    $default  reduce using rule 23 (Stmt)


State 108

   18 Block: '{' '}' .

    $default  reduce using rule 18 (Block)


State 109

   24 Stmt: Block .

    $default  reduce using rule 24 (Stmt)


State 110

   63 BlockItem: Stmt .
   65          | Stmt . BlockItem

    INT        shift, and go to state 7
    RETURN     shift, and go to state 102
    CONST      shift, and go to state 2
    IF         shift, and go to state 103
    WHILE      shift, and go to state 104
    BREAK      shift, and go to state 105
    CONTINUE   shift, and go to state 106
    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    ';'        shift, and go to state 107
    '{'        shift, and go to state 60

    $default  reduce using rule 63 (BlockItem)

    Block       go to state 109
    Stmt        go to state 110
    Exp         go to state 111
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    Decl        go to state 112
    ConstDecl   go to state 113
    BlockItem   go to state 152
    LVal        go to state 115
    VarDecl     go to state 116
    BType       go to state 117
    Number      go to state 48
    UnaryOp     go to state 49


State 111

   22 Stmt: Exp . ';'

    ';'  shift, and go to state 153


State 112

   62 BlockItem: Decl .
   64          | Decl . BlockItem

    INT        shift, and go to state 7
    RETURN     shift, and go to state 102
    CONST      shift, and go to state 2
    IF         shift, and go to state 103
    WHILE      shift, and go to state 104
    BREAK      shift, and go to state 105
    CONTINUE   shift, and go to state 106
    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    ';'        shift, and go to state 107
    '{'        shift, and go to state 60

    $default  reduce using rule 62 (BlockItem)

    Block       go to state 109
    Stmt        go to state 110
    Exp         go to state 111
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    Decl        go to state 112
    ConstDecl   go to state 113
    BlockItem   go to state 154
    LVal        go to state 115
    VarDecl     go to state 116
    BType       go to state 117
    Number      go to state 48
    UnaryOp     go to state 49


State 113

   50 Decl: ConstDecl .

    $default  reduce using rule 50 (Decl)


State 114

   17 Block: '{' BlockItem . '}'

    '}'  shift, and go to state 155


State 115

   21 Stmt: LVal . '=' Exp ';'
   32 PrimaryExp: LVal .

    '='  shift, and go to state 156

    $default  reduce using rule 32 (PrimaryExp)


State 116

   51 Decl: VarDecl .

    $default  reduce using rule 51 (Decl)


State 117

   68 VarDecl: BType . VarDef ';'

    IDENT  shift, and go to state 28

    VarDef  go to state 157


State 118

    6 RestCompUnit: '(' FuncFParams ')' Block .

    $default  reduce using rule 6 (RestCompUnit)


State 119

   82 FuncFParams: FuncFParam ',' FuncFParams .

    $default  reduce using rule 82 (FuncFParams)


State 120

   71 VarDef: IDENT ',' VarDef .

    $default  reduce using rule 71 (VarDef)


State 121

   70 VarDef: IDENT '=' InitVal .
   72       | IDENT '=' InitVal . ',' VarDef

    ','  shift, and go to state 158

    $default  reduce using rule 70 (VarDef)


State 122

   75 VarDef: IDENT ConstArray ',' . VarDef

    IDENT  shift, and go to state 28

    VarDef  go to state 159


State 123

   74 VarDef: IDENT ConstArray '=' . InitVal
   76       | IDENT ConstArray '=' . InitVal ',' VarDef

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    '{'        shift, and go to state 36

    Exp         go to state 37
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    LVal        go to state 46
    InitVal     go to state 160
    Number      go to state 48
    UnaryOp     go to state 49


State 124

   36 UnaryExp: IDENT '(' ')' .

    $default  reduce using rule 36 (UnaryExp)


State 125

   84 FuncRParams: Exp .
   85            | Exp . ',' FuncRParams

    ','  shift, and go to state 161

    $default  reduce using rule 84 (FuncRParams)


State 126

   37 UnaryExp: IDENT '(' FuncRParams . ')'

    ')'  shift, and go to state 162


State 127

   88 Array: '[' Exp . ']'
   89      | '[' Exp . ']' Array

    ']'  shift, and go to state 163


State 128

   31 PrimaryExp: '(' Exp ')' .

    $default  reduce using rule 31 (PrimaryExp)


State 129

   80 InitVals: InitVal ',' . InitVals

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    '{'        shift, and go to state 36

    Exp         go to state 37
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    LVal        go to state 46
    InitVal     go to state 73
    InitVals    go to state 164
    Number      go to state 48
    UnaryOp     go to state 49


State 130

   78 InitVal: '{' InitVals '}' .

    $default  reduce using rule 78 (InitVal)


State 131

   39 MulExp: MulExp MulOp UnaryExp .

    $default  reduce using rule 39 (MulExp)


State 132

   39 MulExp: MulExp . MulOp UnaryExp
   41 AddExp: AddExp AddOp MulExp .

    TIMES   shift, and go to state 75
    DIVIDE  shift, and go to state 76
    MOD     shift, and go to state 77

    $default  reduce using rule 41 (AddExp)

    MulOp  go to state 78


State 133

   41 AddExp: AddExp . AddOp MulExp
   43 RelExp: RelExp RelOp AddExp .

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80

    $default  reduce using rule 43 (RelExp)

    AddOp  go to state 81


State 134

   43 RelExp: RelExp . RelOp AddExp
   45 EqExp: EqExp EqOp RelExp .

    LT  shift, and go to state 82
    GT  shift, and go to state 83
    LE  shift, and go to state 84
    GE  shift, and go to state 85

    $default  reduce using rule 45 (EqExp)

    RelOp  go to state 86


State 135

   45 EqExp: EqExp . EqOp RelExp
   47 LAndExp: LAndExp AND EqExp .

    EQ  shift, and go to state 87
    NE  shift, and go to state 88

    $default  reduce using rule 47 (LAndExp)

    EqOp  go to state 89


State 136

   47 LAndExp: LAndExp . AND EqExp
   49 LOrExp: LOrExp OR LAndExp .

    AND  shift, and go to state 90

    $default  reduce using rule 49 (LOrExp)


State 137

   10 RestCompUnit: '=' InitVal ',' VarDef . ';'

    ';'  shift, and go to state 165


State 138

   87 ConstArray: '[' ConstExp ']' ConstArray .

    $default  reduce using rule 87 (ConstArray)


State 139

   12 RestCompUnit: ConstArray ',' VarDef ';' .

    $default  reduce using rule 12 (RestCompUnit)


State 140

   13 RestCompUnit: ConstArray '=' InitVal ';' .

    $default  reduce using rule 13 (RestCompUnit)


State 141

   14 RestCompUnit: ConstArray '=' InitVal ',' . VarDef ';'

    IDENT  shift, and go to state 28

    VarDef  go to state 166


State 142

   60 ConstInitVals: ConstInitVal ',' . ConstInitVals

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    '{'        shift, and go to state 56

    Exp            go to state 50
    PrimaryExp     go to state 38
    UnaryExp       go to state 39
    MulExp         go to state 40
    AddExp         go to state 41
    RelExp         go to state 42
    EqExp          go to state 43
    LAndExp        go to state 44
    LOrExp         go to state 45
    ConstInitVal   go to state 98
    ConstInitVals  go to state 167
    ConstExp       go to state 58
    LVal           go to state 46
    Number         go to state 48
    UnaryOp        go to state 49


State 143

   58 ConstInitVal: '{' ConstInitVals '}' .

    $default  reduce using rule 58 (ConstInitVal)


State 144

   54 ConstDef: IDENT '=' ConstInitVal ',' ConstDef .

    $default  reduce using rule 54 (ConstDef)


State 145

   56 ConstDef: IDENT ConstArray '=' ConstInitVal ',' . ConstDef

    IDENT  shift, and go to state 12

    ConstDef  go to state 168


State 146

   20 Stmt: RETURN ';' .

    $default  reduce using rule 20 (Stmt)


State 147

   19 Stmt: RETURN Exp . ';'

    ';'  shift, and go to state 169


State 148

   25 Stmt: IF '(' . Exp ')' Stmt
   26     | IF '(' . Exp ')' Stmt ELSE Stmt

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35

    Exp         go to state 170
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    LVal        go to state 46
    Number      go to state 48
    UnaryOp     go to state 49


State 149

   27 Stmt: WHILE '(' . Exp ')' Stmt

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35

    Exp         go to state 171
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    LVal        go to state 46
    Number      go to state 48
    UnaryOp     go to state 49


State 150

   28 Stmt: BREAK ';' .

    $default  reduce using rule 28 (Stmt)


State 151

   29 Stmt: CONTINUE ';' .

    $default  reduce using rule 29 (Stmt)


State 152

   65 BlockItem: Stmt BlockItem .

    $default  reduce using rule 65 (BlockItem)


State 153

   22 Stmt: Exp ';' .

    $default  reduce using rule 22 (Stmt)


State 154

   64 BlockItem: Decl BlockItem .

    $default  reduce using rule 64 (BlockItem)


State 155

   17 Block: '{' BlockItem '}' .

    $default  reduce using rule 17 (Block)


State 156

   21 Stmt: LVal '=' . Exp ';'

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35

    Exp         go to state 172
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    LVal        go to state 46
    Number      go to state 48
    UnaryOp     go to state 49


State 157

   68 VarDecl: BType VarDef . ';'

    ';'  shift, and go to state 173


State 158

   72 VarDef: IDENT '=' InitVal ',' . VarDef

    IDENT  shift, and go to state 28

    VarDef  go to state 174


State 159

   75 VarDef: IDENT ConstArray ',' VarDef .

    $default  reduce using rule 75 (VarDef)


State 160

   74 VarDef: IDENT ConstArray '=' InitVal .
   76       | IDENT ConstArray '=' InitVal . ',' VarDef

    ','  shift, and go to state 175

    $default  reduce using rule 74 (VarDef)


State 161

   85 FuncRParams: Exp ',' . FuncRParams

    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35

    Exp          go to state 125
    PrimaryExp   go to state 38
    UnaryExp     go to state 39
    MulExp       go to state 40
    AddExp       go to state 41
    RelExp       go to state 42
    EqExp        go to state 43
    LAndExp      go to state 44
    LOrExp       go to state 45
    LVal         go to state 46
    FuncRParams  go to state 176
    Number       go to state 48
    UnaryOp      go to state 49


State 162

   37 UnaryExp: IDENT '(' FuncRParams ')' .

    $default  reduce using rule 37 (UnaryExp)


State 163

   88 Array: '[' Exp ']' .
   89      | '[' Exp ']' . Array

    '['  shift, and go to state 70

    $default  reduce using rule 88 (Array)

    Array  go to state 177


State 164

   80 InitVals: InitVal ',' InitVals .

    $default  reduce using rule 80 (InitVals)


State 165

   10 RestCompUnit: '=' InitVal ',' VarDef ';' .

    $default  reduce using rule 10 (RestCompUnit)


State 166

   14 RestCompUnit: ConstArray '=' InitVal ',' VarDef . ';'

    ';'  shift, and go to state 178


State 167

   60 ConstInitVals: ConstInitVal ',' ConstInitVals .

    $default  reduce using rule 60 (ConstInitVals)


State 168

   56 ConstDef: IDENT ConstArray '=' ConstInitVal ',' ConstDef .

    $default  reduce using rule 56 (ConstDef)


State 169

   19 Stmt: RETURN Exp ';' .

    $default  reduce using rule 19 (Stmt)


State 170

   25 Stmt: IF '(' Exp . ')' Stmt
   26     | IF '(' Exp . ')' Stmt ELSE Stmt

    ')'  shift, and go to state 179


State 171

   27 Stmt: WHILE '(' Exp . ')' Stmt

    ')'  shift, and go to state 180


State 172

   21 Stmt: LVal '=' Exp . ';'

    ';'  shift, and go to state 181


State 173

   68 VarDecl: BType VarDef ';' .

    $default  reduce using rule 68 (VarDecl)


State 174

   72 VarDef: IDENT '=' InitVal ',' VarDef .

    $default  reduce using rule 72 (VarDef)


State 175

   76 VarDef: IDENT ConstArray '=' InitVal ',' . VarDef

    IDENT  shift, and go to state 28

    VarDef  go to state 182


State 176

   85 FuncRParams: Exp ',' FuncRParams .

    $default  reduce using rule 85 (FuncRParams)


State 177

   89 Array: '[' Exp ']' Array .

    $default  reduce using rule 89 (Array)


State 178

   14 RestCompUnit: ConstArray '=' InitVal ',' VarDef ';' .

    $default  reduce using rule 14 (RestCompUnit)


State 179

   25 Stmt: IF '(' Exp ')' . Stmt
   26     | IF '(' Exp ')' . Stmt ELSE Stmt

    RETURN     shift, and go to state 102
    IF         shift, and go to state 103
    WHILE      shift, and go to state 104
    BREAK      shift, and go to state 105
    CONTINUE   shift, and go to state 106
    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    ';'        shift, and go to state 107
    '{'        shift, and go to state 60

    Block       go to state 109
    Stmt        go to state 183
    Exp         go to state 111
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    LVal        go to state 115
    Number      go to state 48
    UnaryOp     go to state 49


State 180

   27 Stmt: WHILE '(' Exp ')' . Stmt

    RETURN     shift, and go to state 102
    IF         shift, and go to state 103
    WHILE      shift, and go to state 104
    BREAK      shift, and go to state 105
    CONTINUE   shift, and go to state 106
    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    ';'        shift, and go to state 107
    '{'        shift, and go to state 60

    Block       go to state 109
    Stmt        go to state 184
    Exp         go to state 111
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    LVal        go to state 115
    Number      go to state 48
    UnaryOp     go to state 49


State 181

   21 Stmt: LVal '=' Exp ';' .

    $default  reduce using rule 21 (Stmt)


State 182

   76 VarDef: IDENT ConstArray '=' InitVal ',' VarDef .

    $default  reduce using rule 76 (VarDef)


State 183

   25 Stmt: IF '(' Exp ')' Stmt .
   26     | IF '(' Exp ')' Stmt . ELSE Stmt

    ELSE  shift, and go to state 185

    ELSE      [reduce using rule 25 (Stmt)]
    $default  reduce using rule 25 (Stmt)


State 184

   27 Stmt: WHILE '(' Exp ')' Stmt .

    $default  reduce using rule 27 (Stmt)


State 185

   26 Stmt: IF '(' Exp ')' Stmt ELSE . Stmt

    RETURN     shift, and go to state 102
    IF         shift, and go to state 103
    WHILE      shift, and go to state 104
    BREAK      shift, and go to state 105
    CONTINUE   shift, and go to state 106
    INT_CONST  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    NOT        shift, and go to state 33
    IDENT      shift, and go to state 34
    '('        shift, and go to state 35
    ';'        shift, and go to state 107
    '{'        shift, and go to state 60

    Block       go to state 109
    Stmt        go to state 186
    Exp         go to state 111
    PrimaryExp  go to state 38
    UnaryExp    go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    RelExp      go to state 42
    EqExp       go to state 43
    LAndExp     go to state 44
    LOrExp      go to state 45
    LVal        go to state 115
    Number      go to state 48
    UnaryOp     go to state 49


State 186

   26 Stmt: IF '(' Exp ')' Stmt ELSE Stmt .

    $default  reduce using rule 26 (Stmt)
