decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()

fun @f1d(@arr: *i32) {
%entry:
    %arr = alloc *i32
    store @arr, %arr
    @arr_1 = load %arr
    @i_1 = alloc i32
    store 0, @i_1
    jump %while_entry_0

%while_entry_0:
    %0 = load @i_1
    %1 = lt %0, 10
    br %1, %while_body_0, %end_0

%while_body_0:
    %2 = load @i_1
    %3 = getptr @arr_1, %2
    store %2, %3
    %5 = load @i_1
    %6 = add %5, 1
    store %6, @i_1
    jump %while_entry_0

%end_0:
    ret
}


fun @f2d(@arr: *[i32, 10]) {
%entry:
    %arr = alloc *[i32, 10]
    store @arr, %arr
    @arr_1 = load %arr
    %7 = getptr @arr_1, 1
    %8 = getelemptr %7, 2
    store 3, %8
    @i_1 = alloc i32
    store 0, @i_1
    jump %while_entry_1

%while_entry_1:
    %10 = load @i_1
    %11 = lt %10, 10
    br %11, %while_body_1, %end_1

%while_body_1:
    %12 = load @i_1
    %13 = getptr @arr_1, %12
    %14 = getelemptr %13, 0
    call @f1d(%14)
    %15 = load @i_1
    %16 = add %15, 1
    store %16, @i_1
    jump %while_entry_1

%end_1:
    ret
}


fun @main(): i32 {
%entry:
    ret 33
}


